{"version":3,"sources":["components/Header/index.jsx","components/AddInput/index.jsx","components/TodoItem/index.jsx","components/Modal/index.jsx","libs/utils.js","components/Modal/CheckModal/index.jsx","components/Modal/EditModal/index.jsx","App.js","index.js"],"names":["Header","openInput","className","onClick","AddInput","isInputShow","addItem","inputRef","useRef","ref","type","placeholder","inputValue","current","value","trim","length","submitValue","TodoItem","props","data","openCheckModal","openEditModal","completedItem","deleteItem","onChange","id","checked","completed","name","htmlFor","style","textDecoration","content","Modal","isShowModal","modalTitle","children","_addZero","formatDate","timeStamp","date","Date","y","getFullYear","M","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","CheckModal","isShowCheckModal","closeModal","EditModal","isShowEditModal","submitEdit","checkRef","defaultValue","newData","getTime","App","useState","setInputShow","setShowCheckModal","setShowEditModal","todoList","setTodoList","currentData","setCurrentData","useEffect","todoData","JSON","parse","localStorage","getItem","setItem","stringify","useCallback","dataItem","map","item","filter","_setCurrentData","find","pre","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8c6e09ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.scss'\r\n\r\nconst Header = ({openInput}) => {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <h1>Todo List</h1>\r\n        <p onClick={ () => openInput() }>&#43;</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useRef } from 'react'\r\nimport './index.scss';\r\n\r\nconst AddInput = ({isInputShow, addItem }) => {\r\n  const inputRef = useRef()\r\n\r\n  function submitValue() {\r\n    const inputValue = inputRef.current.value.trim()\r\n    if(inputValue.length === 0) return\r\n    addItem(inputValue)\r\n    inputRef.current.value = ''\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isInputShow\r\n        ?\r\n        (\r\n          <div className=\"input-container\">\r\n            <input ref={inputRef} type=\"text\" placeholder=\"Add Todo here ...\"/>\r\n            <button onClick={ () => submitValue() }>Add</button>\r\n          </div>\r\n        )\r\n        :\r\n        ''\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddInput\r\n","import React from 'react';\r\nimport './index.scss'\r\n\r\nconst TodoItem = (props) => {\r\n  const {data, openCheckModal, openEditModal, completedItem, deleteItem} = props\r\n\r\n  return (\r\n    <li className=\"todo-item\">\r\n      <div className=\"check-box\">\r\n        <input\r\n          onChange={() => completedItem(data.id)}\r\n          checked={data.completed}\r\n          type=\"checkbox\"\r\n          name=\"checkbox\"\r\n          id={data.id}\r\n        />\r\n        <label\r\n          htmlFor={data.id}\r\n          className=\"content\"\r\n          style={{textDecoration: data.completed ? 'line-through' : 'none' }}\r\n        >\r\n        {data.content}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          className=\"check\"\r\n          onClick={() => openCheckModal(data.id)}\r\n        >check</button>\r\n        <button\r\n          className=\"edit\"\r\n          onClick={() => openEditModal(data.id)}\r\n        >edit</button>\r\n        <button\r\n          className=\"delete\"\r\n          onClick={() => deleteItem(data.id)}\r\n        >delete</button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react'\r\nimport './index.scss'\r\n\r\nconst Modal = ({isShowModal, modalTitle, children}) => {\r\n  return (\r\n    <>\r\n      {\r\n        isShowModal\r\n        ?\r\n        (\r\n          <div className=\"modal\">\r\n            <div className=\"inner\">\r\n              <div className=\"m-header\">{modalTitle}</div>\r\n              <div className=\"content-wrapper\">\r\n                { children }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n        :\r\n        ''\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","function formatDate(timeStamp) {\r\n  const date = new Date(timeStamp)\r\n\r\n  const y = date.getFullYear(),\r\n        M = date.getMonth() + 1,\r\n        d = date.getDate(),\r\n        h = _addZero(date.getHours()),\r\n        m = _addZero(date.getMinutes()),\r\n        s = _addZero(date.getSeconds())\r\n\r\n  return `${y}-${M}-${d} ${h}:${m}:${s}`\r\n}\r\n\r\nfunction _addZero(value) {\r\n  return value < 10 ? '0' + value : value\r\n}\r\n\r\nexport default formatDate\r\n","import React from 'react'\r\nimport Modal from '../'\r\nimport formatDate  from '../../../libs/utils'\r\nimport './index.scss'\r\n\r\nconst CheckModal = ({isShowCheckModal, data, closeModal}) => {\r\n  return (\r\n    <Modal\r\n      isShowModal={isShowCheckModal}\r\n      modalTitle=\"Check\"\r\n    >\r\n    <p>Time:{formatDate(data.id)}</p>\r\n    <p>Content:{data.content}</p>\r\n    <p>Status:{data.completed ? 'done' : 'pending' }</p>\r\n    <button className=\"confirm\" onClick={closeModal}>Confirm</button>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CheckModal;\r\n","import React, { useRef } from 'react'\r\nimport Modal from '../'\r\nimport formatDate  from '../../../libs/utils'\r\nimport './index.scss'\r\n\r\nconst EditModal = ({isShowEditModal, data, submitEdit}) => {\r\n  const inputRef = useRef(),\r\n        checkRef = useRef()\r\n\r\n  const formatNewData = () => {\r\n    const value = inputRef.current.value.trim(),\r\n          valueLength = value.length\r\n\r\n    if (valueLength === 0) return\r\n\r\n    const newData = {\r\n      id: new Date().getTime(),\r\n      content: value,\r\n      completed: checkRef.current.checked\r\n    }\r\n\r\n    submitEdit(newData, data.id)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isShowModal= { isShowEditModal }\r\n      modalTitle=\"Edit\"\r\n    >\r\n      <p className=\"topic\">Time:{ formatDate(data.id) }</p>\r\n      <p className=\"topic\">\r\n        <textarea\r\n         ref={ inputRef }\r\n         defaultValue={ data.content }\r\n         className=\"text-area\"\r\n        ></textarea>\r\n      </p>\r\n      <p className=\"topic\">\r\n        <label htmlFor=\"edit-status\">status:</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultValue={ data.completed ? true : false}\r\n          ref={ checkRef }\r\n          id=\"edit-status\"\r\n        />\r\n      </p>\r\n      <button\r\n        className=\"submit\"\r\n        onClick={ formatNewData }\r\n      >\r\n        Submit\r\n      </button>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditModal;\r\n","import React, { useState, useCallback, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport AddInput from './components/AddInput'\r\nimport TodoItem from './components/TodoItem'\r\nimport CheckModal from './components/Modal/CheckModal'\r\nimport EditModal from './components/Modal/EditModal'\r\nimport './App.scss'\r\n\r\nexport default function App() {\r\n  const [isInputShow, setInputShow] = useState(false),\r\n        [isShowCheckModal, setShowCheckModal] = useState(false),\r\n        [isShowEditModal, setShowEditModal] = useState(false),\r\n        [todoList, setTodoList] = useState([]),\r\n        [currentData, setCurrentData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const todoData = JSON.parse(localStorage.getItem('todoData'))\r\n    setTodoList(todoData)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todoData', JSON.stringify(todoList))\r\n  }, [todoList])\r\n\r\n  function openInput() {\r\n    setInputShow((pre) => !pre)\r\n  }\r\n\r\n  const addItem = useCallback((value) => {\r\n    const dataItem = {\r\n      id: new Date().getTime(),\r\n      content: value,\r\n      completed: false\r\n    }\r\n\r\n    setTodoList((todoList) => [dataItem, ...todoList])\r\n    setInputShow(false)\r\n  }, [])\r\n\r\n  const completedItem = useCallback((id) => {\r\n    setTodoList((todoList) => todoList.map((item) => {\r\n      if (item.id === id) {\r\n        item.completed = !item.completed\r\n      }\r\n      return item\r\n    }))\r\n  }, [])\r\n\r\n  const deleteItem = useCallback((id) => {\r\n    setTodoList((todoList) => todoList.filter(item => item.id !== id))\r\n  }, [])\r\n\r\n  const openCheckModal = useCallback(\r\n    (id) => {\r\n      _setCurrentData(todoList, id)\r\n      setShowCheckModal(true)\r\n    },\r\n    [todoList]\r\n  )\r\n\r\n  const openEditModal = useCallback(\r\n    (id) => {\r\n      _setCurrentData(todoList, id)\r\n      setShowEditModal(true)\r\n    },\r\n    [todoList]\r\n  )\r\n\r\n  function _setCurrentData(todoList, id) {\r\n    setCurrentData(() => todoList.find((item) => item.id === id))\r\n  }\r\n\r\n  const submitEdit = useCallback((newData, id) => {\r\n    setTodoList((todoList) =>\r\n      todoList.map((item) => {\r\n        if (item.id === id) {\r\n          item = newData\r\n        }\r\n        return item\r\n      })\r\n    )\r\n    setShowEditModal(false)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CheckModal\r\n        isShowCheckModal={ isShowCheckModal }\r\n        closeModal={() => setShowCheckModal(false)}\r\n        data={ currentData }\r\n      />\r\n      <EditModal\r\n        isShowEditModal={ isShowEditModal }\r\n        data={ currentData }\r\n        submitEdit={ submitEdit }\r\n      />\r\n      <Header\r\n        openInput={ openInput }\r\n      />\r\n      <AddInput\r\n        isInputShow={ isInputShow }\r\n        addItem={ addItem }\r\n      />\r\n      {\r\n        !todoList || todoList.length === 0\r\n        ?\r\n        (<h3>Click + to add a task</h3>)\r\n        :\r\n        (\r\n          <ul>\r\n            {todoList.map((item) => {\r\n              return (\r\n                <TodoItem\r\n                  key={ item.id } data={ item }\r\n                  openCheckModal={ openCheckModal }\r\n                  openEditModal={ openEditModal }\r\n                  completedItem={ completedItem }\r\n                  deleteItem = { deleteItem }\r\n                />\r\n              )\r\n            })}\r\n          </ul>\r\n        )\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'))\r\n"],"sourceRoot":""}